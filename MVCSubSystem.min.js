var MVCSubSystem=MVCSubSystem||{};MVCSubSystem.iObserver=function(){this.id="iObserver"};MVCSubSystem.iObserver.prototype.update=function(){console.log("* iObserver update!")};MVCSubSystem.AbstractModel=function(){this.registry=new DataStructures.LinkedList};MVCSubSystem.AbstractModel.prototype.attach=function(e){this.registry.add(e)};MVCSubSystem.AbstractModel.prototype.detach=function(e){this.registry.remove(e)};MVCSubSystem.AbstractModel.prototype.notify=function(){var e=this.registry.length;while(e--){this.registry[e].update()}};MVCSubSystem.AbstractController=function(){this.view=null;this.model=null};MVCSubSystem.AbstractController.prototype=new MVCSubSystem.iObserver;MVCSubSystem.AbstractController.prototype.construct=function(e){this.view=e;this.model=this.view.getModel();this.model.attach(this)};MVCSubSystem.AbstractController.prototype.destruct=function(){this.model.detach(this)};MVCSubSystem.AbstractView=function(){this.model=null;this.controller=null};MVCSubSystem.AbstractView.prototype=new MVCSubSystem.iObserver;MVCSubSystem.AbstractView.prototype.construct=function(e){this.model=e;this.controller=new MVCSubSystem.AbstractController;this.model.attach(this)};MVCSubSystem.AbstractView.prototype.destruct=function(){this.model.detach(this)};MVCSubSystem.AbstractView.prototype.update=function(){this.draw()};MVCSubSystem.AbstractView.prototype.initialize=function(){this.controller=this.makeController()};MVCSubSystem.AbstractView.prototype.makeController=function(){return new MVCSubSystem.AbstractController};MVCSubSystem.AbstractView.prototype.draw=function(){console.log("* AbstractView drawing!")};MVCSubSystem.AbstractView.prototype.getModel=function(){return this.model};MVCSubSystem.AbstractView.prototype.getController=function(){return this.controller}